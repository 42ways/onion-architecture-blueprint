// tasks for parent project only; see build.gradle in modules for subproject tasks and configuration

plugins {
  id 'java'
  id "life.expert.archidoc" version "1.0.11"
  id "com.github.spotbugs" version "5.0.6"
}

subprojects {
    apply plugin: 'com.github.spotbugs'
}

project.tasks.getByName("archidoc").dependsOn getTasksByName("build", true)
archidoc {
    file "$buildDir/architecture/classdiagram.dot"
    packages = ['de.fourtytwoways.onion']
//    packages = ['de.fourtytwoways.onion.domain.model.person',
//                'de.fourtytwoways.onion.infrastructure.database.person']
//    packages = ['de.fourtytwoways.onion.domain.model.contract',
//                'de.fourtytwoways.onion.domain.usecase.contract',
//                'de.fourtytwoways.onion.application.usecase.contract',
//                'de.fourtytwoways.onion.infrastructure.database.contract']
    multiProject(true)
    // Comment/Uncomment the following options to configure diagram creation
    enableAllInfo()
    // enableClassInfo()
    // ignoreClassVisibility()
    // enableFieldInfo()
    // ignoreFieldVisibility()
    // enableMethodInfo()
    // ignoreMethodVisibility()
    // enableAnnotationInfo()
    enableExternalClasses()
    // TODO: we want to have a class diagram with all info and the interclassdependencies as two separate graphs
    // enableInterClassDependencies(true)
    verbose(true)
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    reportOn getTasksByName("test", true)
}
